[{"/Users/ajsuarez/Workspace/web/react/react-typescript/src/index.tsx":"1","/Users/ajsuarez/Workspace/web/react/react-typescript/src/screens/app.tsx":"2","/Users/ajsuarez/Workspace/web/react/react-typescript/src/proivders/app/index.tsx":"3","/Users/ajsuarez/Workspace/web/react/react-typescript/src/screens/login/index.tsx":"4","/Users/ajsuarez/Workspace/web/react/react-typescript/src/components/themes/index.ts":"5","/Users/ajsuarez/Workspace/web/react/react-typescript/src/components/forms/index.ts":"6","/Users/ajsuarez/Workspace/web/react/react-typescript/src/components/themes/minimal/index.ts":"7","/Users/ajsuarez/Workspace/web/react/react-typescript/src/components/themes/elegant/index.ts":"8","/Users/ajsuarez/Workspace/web/react/react-typescript/src/components/themes/default/index.ts":"9","/Users/ajsuarez/Workspace/web/react/react-typescript/src/components/themes/default/colors.ts":"10"},{"size":404,"mtime":1614327793499,"results":"11","hashOfConfig":"12"},{"size":231,"mtime":1614324862147,"results":"13","hashOfConfig":"12"},{"size":264,"mtime":1614324923525,"results":"14","hashOfConfig":"12"},{"size":2701,"mtime":1614360929379,"results":"15","hashOfConfig":"12"},{"size":181,"mtime":1614327792453,"results":"16","hashOfConfig":"12"},{"size":854,"mtime":1614452340523,"results":"17","hashOfConfig":"12"},{"size":146,"mtime":1614324888292,"results":"18","hashOfConfig":"12"},{"size":146,"mtime":1614324891975,"results":"19","hashOfConfig":"12"},{"size":146,"mtime":1614326874059,"results":"20","hashOfConfig":"12"},{"size":111,"mtime":1614216702314,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1r06h57",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/ajsuarez/Workspace/web/react/react-typescript/src/index.tsx",[],["45","46","47","48","49","50","51","52"],"/Users/ajsuarez/Workspace/web/react/react-typescript/src/screens/app.tsx",[],"/Users/ajsuarez/Workspace/web/react/react-typescript/src/proivders/app/index.tsx",[],"/Users/ajsuarez/Workspace/web/react/react-typescript/src/screens/login/index.tsx",["53","54","55"],"import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport * as yup from 'yup'\nimport { useForm } from 'react-hook-form'\nimport useYupValidationResolver from '../../components/forms'\n\nimport styles from './assets/styles.module.css'\n\nconst Login: React.FC = () => {\n  const validationSchema = React.useMemo(\n    () =>\n      yup.object({\n        username: yup.string().required('Usenrame is Required'),\n        password: yup.string().required('Password is Required'),\n      }),\n    [],\n  )\n  const resolver = useYupValidationResolver(validationSchema)\n  const { register, handleSubmit, errors } = useForm({ resolver })\n  const onSubmit = (data: any): void => {\n    console.log(data)\n  }\n\n  console.log('Errors', errors)\n  return (\n    <div className={styles.background}>\n      <Container maxWidth=\"sm\" className={styles.login}>\n        <form onSubmit={handleSubmit(onSubmit)} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={12}>\n              <Grid item xs={6} sm={6}>\n                <Typography component=\"h5\" variant=\"h5\">\n                  Login\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                autoComplete=\"username\"\n                name=\"username\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                inputRef={register}\n                autoFocus\n              />\n              {errors.username && <p>{errors.username.message}</p>}\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                inputRef={register}\n                autoComplete=\"current-password\"\n              />\n              {errors.password && <p>{errors.password.message}</p>}\n            </Grid>\n            <Grid item xs={12} sm={12}>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={styles.button}\n              >\n                Submit\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Container>\n    </div>\n  )\n}\n\nexport default Login\n","/Users/ajsuarez/Workspace/web/react/react-typescript/src/components/themes/index.ts",[],"/Users/ajsuarez/Workspace/web/react/react-typescript/src/components/forms/index.ts",[],"/Users/ajsuarez/Workspace/web/react/react-typescript/src/components/themes/minimal/index.ts",[],"/Users/ajsuarez/Workspace/web/react/react-typescript/src/components/themes/elegant/index.ts",[],"/Users/ajsuarez/Workspace/web/react/react-typescript/src/components/themes/default/index.ts",[],"/Users/ajsuarez/Workspace/web/react/react-typescript/src/components/themes/default/colors.ts",[],["56","57","58","59","60","61","62","63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":24,"column":27,"nodeType":"82","messageId":"83","endLine":24,"endColumn":30,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":25,"column":5,"nodeType":"87","messageId":"88","endLine":25,"endColumn":16},{"ruleId":"85","severity":1,"message":"86","line":28,"column":3,"nodeType":"87","messageId":"88","endLine":28,"endColumn":14},{"ruleId":"64","replacedBy":"89"},{"ruleId":"66","replacedBy":"90"},{"ruleId":"68","replacedBy":"91"},{"ruleId":"70","replacedBy":"92"},{"ruleId":"72","replacedBy":"93"},{"ruleId":"74","replacedBy":"94"},{"ruleId":"76","replacedBy":"95"},{"ruleId":"78","replacedBy":"96"},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"jest/no-try-expect",["99"],"lines-around-directive",["100"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["101","102"],"no-console","Unexpected console statement.","MemberExpression","unexpected",["97"],["98"],["99"],["100"],[],[],[],[],"no-global-assign","no-unsafe-negation","no-conditional-expect","padding-line-between-statements",{"messageId":"103","fix":"104","desc":"105"},{"messageId":"106","fix":"107","desc":"108"},"suggestUnknown",{"range":"109","text":"110"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"109","text":"111"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[863,866],"unknown","never"]